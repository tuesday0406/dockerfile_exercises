pipeline {
    agent any
    environment {
        DOCKERHUB_CREDS = credentials('dockerhub')
        DB_PASSWORD = credentials('db-password')
        VERSION = "v1"
        OLD_VERSION = "v1"
    }
    stages {
        stage ('Build Images') {
            steps {
                sh "docker build -t ${DOCKERHUB_CREDS_USR}/task2-flask-app:${VERSION} Task2/flask-app"
                sh "docker build -t ${DOCKERHUB_CREDS_USR}/task2-db:${VERSION} Task2/db"
            }
        }
        stage ('Deploy Containers') {
            steps {
                sh "docker network create task2-net || true"
                sh "docker volume create task2-vol || true"
                sh "docker rm -f \$(docker ps -aq) || true"
                sh '''
                docker run -d \
                --network task2-net \
                -e MYSQL_ROOT_PASSWORD=${DB_PASSWORD} \
                -v task2-vol:/var/lib/mysql \
                --name mysql \
                ${DOCKERHUB_CREDS_USR}/task2-db:${VERSION}
                '''
                sh '''
                docker run -d \
                --network task2-net \
                -e MYSQL_ROOT_PASSWORD=${DB_PASSWORD} \
                --name flask-app \
                ${DOCKERHUB_CREDS_USR}/task2-flask-app:${VERSION}
                '''
                sh '''
                docker run -d \
                --network task2-net \
                --mount type=bind,source=\$(pwd)/Task2/nginx/nginx.conf,target=/etc/nginx/nginx.conf \
                --name nginx \
                -p 80:80 \
                nginx:latest
                '''
            }
        }
        stage ('Push Images') {
            steps {
                sh "docker login -u ${DOCKERHUB_CREDS_USR} -p ${DOCKERHUB_CREDS_PSW}"
                sh "docker push ${DOCKERHUB_CREDS_USR}/task2-flask-app:${VERSION}"
                sh "docker push ${DOCKERHUB_CREDS_USR}/task2-db:${VERSION}"
                sh "docker logout"
            }
        }
    }
    post {
        always {
            cleanWs()
            sh "docker rmi ${DOCKERHUB_CREDS_USR}/task2-flask-app:${OLD_VERSION} || true"
            sh "docker rmi ${DOCKERHUB_CREDS_USR}/task2-db:${OLD_VERSION} || true"
        }
    }
}